{"ast":null,"code":"var _jsxFileName = \"/home/bmacerbi/Desktop/turingVoting/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport TuringVotingABI from './TuringVoting.json';\nimport { Button, TextField, Typography, Container, Box, MenuItem, Select, FormControl, InputLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\nconst abi = TuringVotingABI.abi;\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [voterName, setVoterName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [votingEnabled, setVotingEnabled] = useState(false);\n  const [voterBalances, setVoterBalances] = useState([]);\n\n  // List of voter names (replace with your actual names)\n  const voterNames = [\"nome0\", \"nome1\", \"nome2\", \"nome3\", \"nome4\", \"nome5\", \"nome6\", \"nome7\", \"nome8\", \"nome9\", \"nome10\", \"nome11\", \"nome12\", \"nome13\", \"nome14\", \"nome15\", \"nome16\", \"nome17\", \"nome18\", \"nome19\"];\n  useEffect(() => {\n    async function init() {\n      if (window.ethereum) {\n        try {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const signer = await provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, abi, signer);\n          const account = await signer.getAddress();\n          setProvider(provider);\n          setSigner(signer);\n          setContract(contract);\n          setAccount(account);\n          const isVotingEnabled = await contract.votingEnabled();\n          setVotingEnabled(isVotingEnabled);\n\n          // Fetch balances for all voters\n          fetchVoterBalances(contract);\n          console.log('Initialization successful:', {\n            provider,\n            signer,\n            contract,\n            account\n          });\n        } catch (error) {\n          console.error('Error initializing contract:', error);\n        }\n      } else {\n        console.error('Ethereum provider not found. Install MetaMask.');\n      }\n    }\n    init();\n  }, []);\n  const fetchVoterBalances = async contract => {\n    const balances = [];\n    for (const name of voterNames) {\n      try {\n        // Call the smart contract function to get the voter's address\n        const nameAddress = await contract.getVoterAddress(name);\n\n        // Ensure the address is valid before fetching balance\n        if (nameAddress === \"0x0000000000000000000000000000000000000000\") {\n          throw new Error(\"Invalid address for voter name: \" + name);\n        }\n\n        // Fetch balance\n        const balance = await contract.balanceOf(nameAddress);\n        balances.push({\n          name,\n          balance: ethers.formatEther(balance)\n        });\n      } catch (error) {\n        console.error(`Error fetching balance for ${name}:`, error);\n        balances.push({\n          name,\n          balance: \"N/A\"\n        });\n      }\n    }\n    balances.sort((a, b) => a.name.localeCompare(b.name));\n    setVoterBalances(balances);\n  };\n  const handleVote = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.vote(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Vote successful!');\n      fetchVoterBalances(contract);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  };\n  const toggleVoting = async enable => {\n    if (!contract) return;\n    try {\n      const tx = enable ? await contract.votingOn() : await contract.votingOff();\n      await tx.wait();\n      setVotingEnabled(enable);\n      alert(`Voting ${enable ? 'enabled' : 'disabled'}`);\n    } catch (error) {\n      console.error('Error toggling voting:', error);\n      alert('Failed to toggle voting');\n    }\n  };\n  const issueToken = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.issueToken(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Issue tokens successful!');\n      fetchVoterBalances(contract);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Turing Voting DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Connected Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Voting Status: \", votingEnabled ? 'Enabled' : 'Disabled']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 2,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Voter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: voterName,\n            onChange: e => setVoterName(e.target.value),\n            label: \"Voter Name\",\n            children: voterNames.map((name, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount (in Turing)\",\n          variant: \"outlined\",\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleVote,\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: issueToken,\n        sx: {\n          backgroundColor: '#4caf50',\n          '&:hover': {\n            backgroundColor: '#45a049'\n          }\n        },\n        children: \"Issue Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => toggleVoting(!votingEnabled),\n          children: votingEnabled ? 'Disable Voting' : 'Enable Voting'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: \"Voter Balances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Voter Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Balance (Turing)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: voterBalances.map((voter, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: voter.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: voter.balance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A8OCYPCAXI6NKQU5lUqHocZsxbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","TuringVotingABI","Button","TextField","Typography","Container","Box","MenuItem","Select","FormControl","InputLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","contractAddress","abi","App","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","voterName","setVoterName","amount","setAmount","votingEnabled","setVotingEnabled","voterBalances","setVoterBalances","voterNames","init","window","ethereum","request","method","BrowserProvider","getSigner","Contract","getAddress","isVotingEnabled","fetchVoterBalances","console","log","error","balances","name","nameAddress","getVoterAddress","Error","balance","balanceOf","push","formatEther","sort","a","b","localeCompare","handleVote","tx","vote","parseEther","wait","alert","message","toggleVoting","enable","votingOn","votingOff","issueToken","children","my","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","value","onChange","e","target","label","map","index","type","margin","color","onClick","sx","backgroundColor","align","voter","_c","$RefreshReg$"],"sources":["/home/bmacerbi/Desktop/turingVoting/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport TuringVotingABI from './TuringVoting.json';\nimport { Button, TextField, Typography, Container, Box, MenuItem, Select, FormControl, InputLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\n\nconst contractAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\nconst abi = TuringVotingABI.abi;\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [voterName, setVoterName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [votingEnabled, setVotingEnabled] = useState(false);\n  const [voterBalances, setVoterBalances] = useState([]);\n\n  // List of voter names (replace with your actual names)\n  const voterNames = [\n    \"nome0\",\"nome1\", \"nome2\", \"nome3\", \"nome4\", \"nome5\",\n    \"nome6\", \"nome7\", \"nome8\", \"nome9\", \"nome10\",\n    \"nome11\", \"nome12\", \"nome13\", \"nome14\", \"nome15\",\n    \"nome16\", \"nome17\", \"nome18\", \"nome19\"\n  ];\n\n  useEffect(() => {\n    async function init() {\n      if (window.ethereum) {\n        try {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const signer = await provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, abi, signer);\n          const account = await signer.getAddress();\n\n          setProvider(provider);\n          setSigner(signer);\n          setContract(contract);\n          setAccount(account);\n\n          const isVotingEnabled = await contract.votingEnabled();\n          setVotingEnabled(isVotingEnabled);\n\n          // Fetch balances for all voters\n          fetchVoterBalances(contract);\n\n          console.log('Initialization successful:', { provider, signer, contract, account });\n        } catch (error) {\n          console.error('Error initializing contract:', error);\n        }\n      } else {\n        console.error('Ethereum provider not found. Install MetaMask.');\n      }\n    }\n    init();\n  }, []);\n\n  const fetchVoterBalances = async (contract) => {\n    const balances = [];\n\n    for (const name of voterNames) {\n        try {\n            // Call the smart contract function to get the voter's address\n            const nameAddress = await contract.getVoterAddress(name);\n\n            // Ensure the address is valid before fetching balance\n            if (nameAddress === \"0x0000000000000000000000000000000000000000\") {\n                throw new Error(\"Invalid address for voter name: \" + name);\n            }\n\n            // Fetch balance\n            const balance = await contract.balanceOf(nameAddress);\n            balances.push({ name, balance: ethers.formatEther(balance) });\n        } catch (error) {\n            console.error(`Error fetching balance for ${name}:`, error);\n            balances.push({ name, balance: \"N/A\" });\n        }\n    }\n\n    balances.sort((a, b) => a.name.localeCompare(b.name));\n\n    setVoterBalances(balances);\n};\n\n  const handleVote = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.vote(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Vote successful!');\n\n      fetchVoterBalances(contract);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  };\n\n  const toggleVoting = async (enable) => {\n    if (!contract) return;\n    try {\n      const tx = enable ? await contract.votingOn() : await contract.votingOff();\n      await tx.wait();\n      setVotingEnabled(enable);\n      alert(`Voting ${enable ? 'enabled' : 'disabled'}`);\n    } catch (error) {\n      console.error('Error toggling voting:', error);\n      alert('Failed to toggle voting');\n    }\n  };\n\n  const issueToken = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.issueToken(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Issue tokens successful!');\n\n      fetchVoterBalances(contract);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  }\n\n  return (\n    <Container>\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Turing Voting DApp\n        </Typography>\n        <Typography variant=\"body1\">Connected Account: {account}</Typography>\n        <Typography variant=\"body1\">Voting Status: {votingEnabled ? 'Enabled' : 'Disabled'}</Typography>\n\n        <Box my={2}>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel>Voter Name</InputLabel>\n            <Select\n              value={voterName}\n              onChange={(e) => setVoterName(e.target.value)}\n              label=\"Voter Name\"\n            >\n              {voterNames.map((name, index) => (\n                <MenuItem key={index} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <TextField\n            label=\"Amount (in Turing)\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            margin=\"normal\"\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleVote}>\n            Vote\n          </Button>\n        </Box>\n\n        <Button variant=\"contained\" onClick={issueToken} sx={{ backgroundColor: '#4caf50', '&:hover': { backgroundColor: '#45a049' } }}>\n          Issue Tokens\n        </Button>\n\n        <Box my={2}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => toggleVoting(!votingEnabled)}>\n            {votingEnabled ? 'Disable Voting' : 'Enable Voting'}\n          </Button>\n        </Box>\n\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          Voter Balances\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Voter Name</TableCell>\n                <TableCell align=\"right\">Balance (Turing)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {voterBalances.map((voter, index) => (\n                <TableRow key={index}>\n                  <TableCell>{voter.name}</TableCell>\n                  <TableCell align=\"right\">{voter.balance}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}