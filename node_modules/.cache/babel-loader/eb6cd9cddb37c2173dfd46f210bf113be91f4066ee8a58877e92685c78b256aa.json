{"ast":null,"code":"var _jsxFileName = \"/home/bmacerbi/Documents/BlockChain/turingVoting/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport TuringVotingABI from './TuringVoting.json';\nimport { Button, TextField, Typography, Container, Box, MenuItem, Select, FormControl, InputLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\nconst abi = TuringVotingABI.abi;\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [voterName, setVoterName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [votingEnabled, setVotingEnabled] = useState(false);\n  const [voterBalances, setVoterBalances] = useState([]);\n  const [voterNames, setVoterNames] = useState([]);\n  useEffect(() => {\n    async function init() {\n      if (window.ethereum) {\n        try {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const signer = await provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, abi, signer);\n          const account = await signer.getAddress();\n          setProvider(provider);\n          setSigner(signer);\n          setContract(contract);\n          setAccount(account);\n          const isVotingEnabled = await contract.votingEnabled();\n          setVotingEnabled(isVotingEnabled);\n          const names = await contract.getVoterNames();\n          setVoterNames(names);\n          fetchVoterBalances(contract, names);\n          console.log('Initialization successful:', {\n            provider,\n            signer,\n            contract,\n            account\n          });\n        } catch (error) {\n          console.error('Error initializing contract:', error);\n        }\n      } else {\n        console.error('Ethereum provider not found. Install MetaMask.');\n      }\n    }\n    init();\n    const intervalId = setInterval(() => {\n      if (contract) {\n        fetchVoterBalances(contract, voterNames);\n      }\n    }, 30000);\n    return () => clearInterval(intervalId);\n  }, [contract]);\n  const fetchVoterBalances = async (contract, names) => {\n    const balances = [];\n    for (const name of names) {\n      try {\n        const nameAddress = await contract.getVoterAddress(name);\n        if (nameAddress === \"0x0000000000000000000000000000000000000000\") {\n          throw new Error(\"Invalid address for voter name: \" + name);\n        }\n        const balance = await contract.balanceOf(nameAddress);\n        const formattedBalance = ethers.formatEther(balance);\n        balances.push({\n          name,\n          balance: formattedBalance\n        });\n      } catch (error) {\n        console.error(`Error fetching balance for ${name}:`, error);\n        balances.push({\n          name,\n          balance: \"0\"\n        }); // Set \"0\" to ensure sorting works\n      }\n    }\n    balances.sort((a, b) => parseFloat(b.balance) - parseFloat(a.balance));\n    setVoterBalances(balances);\n  };\n  const handleVote = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.vote(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Vote successful!');\n      fetchVoterBalances(contract, voterNames);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  };\n  const toggleVoting = async enable => {\n    if (!contract) return;\n    try {\n      const tx = enable ? await contract.votingOn() : await contract.votingOff();\n      await tx.wait();\n      setVotingEnabled(enable);\n      alert(`Voting ${enable ? 'enabled' : 'disabled'}`);\n    } catch (error) {\n      console.error('Error toggling voting:', error);\n      alert('Failed to toggle voting');\n    }\n  };\n  const issueToken = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.issueToken(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Issue tokens successful!');\n      fetchVoterBalances(contract, voterNames);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Turing Voting DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Connected Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Voting Status: \", votingEnabled ? 'Enabled' : 'Disabled']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 2,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Voter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: voterName,\n            onChange: e => setVoterName(e.target.value),\n            label: \"Voter Name\",\n            children: voterNames.map((name, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Amount (in Turing)\",\n          variant: \"outlined\",\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleVote,\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: issueToken,\n        sx: {\n          backgroundColor: '#4caf50',\n          '&:hover': {\n            backgroundColor: '#45a049'\n          }\n        },\n        children: \"Issue Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => toggleVoting(!votingEnabled),\n          children: votingEnabled ? 'Disable Voting' : 'Enable Voting'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: \"Voter Balances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Voter Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Balance (Turing)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: voterBalances.map((voter, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: voter.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: voter.balance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hq8JqifSVBAreauxZgXA97eJQFo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","TuringVotingABI","Button","TextField","Typography","Container","Box","MenuItem","Select","FormControl","InputLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","contractAddress","abi","App","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","voterName","setVoterName","amount","setAmount","votingEnabled","setVotingEnabled","voterBalances","setVoterBalances","voterNames","setVoterNames","init","window","ethereum","request","method","BrowserProvider","getSigner","Contract","getAddress","isVotingEnabled","names","getVoterNames","fetchVoterBalances","console","log","error","intervalId","setInterval","clearInterval","balances","name","nameAddress","getVoterAddress","Error","balance","balanceOf","formattedBalance","formatEther","push","sort","a","b","parseFloat","handleVote","tx","vote","parseEther","wait","alert","message","toggleVoting","enable","votingOn","votingOff","issueToken","children","my","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","value","onChange","e","target","label","map","index","type","margin","color","onClick","sx","backgroundColor","align","voter","_c","$RefreshReg$"],"sources":["/home/bmacerbi/Documents/BlockChain/turingVoting/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport TuringVotingABI from './TuringVoting.json';\nimport { Button, TextField, Typography, Container, Box, MenuItem, Select, FormControl, InputLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\n\nconst contractAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\nconst abi = TuringVotingABI.abi;\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [voterName, setVoterName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [votingEnabled, setVotingEnabled] = useState(false);\n  const [voterBalances, setVoterBalances] = useState([]);\n  const [voterNames, setVoterNames] = useState([]);\n\n  useEffect(() => {\n    async function init() {\n      if (window.ethereum) {\n        try {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const signer = await provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, abi, signer);\n          const account = await signer.getAddress();\n\n          setProvider(provider);\n          setSigner(signer);\n          setContract(contract);\n          setAccount(account);\n\n          const isVotingEnabled = await contract.votingEnabled();\n          setVotingEnabled(isVotingEnabled);\n\n          const names = await contract.getVoterNames();\n          setVoterNames(names);\n\n          fetchVoterBalances(contract, names);\n\n          console.log('Initialization successful:', { provider, signer, contract, account });\n        } catch (error) {\n          console.error('Error initializing contract:', error);\n        }\n      } else {\n        console.error('Ethereum provider not found. Install MetaMask.');\n      }\n    }\n    init();\n\n    const intervalId = setInterval(() => {\n      if (contract) {\n        fetchVoterBalances(contract, voterNames);\n      }\n    }, 30000); \n\n    return () => clearInterval(intervalId);\n  }, [contract]); \n\n  const fetchVoterBalances = async (contract, names) => {\n    const balances = [];\n\n    for (const name of names) {\n        try {\n            const nameAddress = await contract.getVoterAddress(name);\n\n            if (nameAddress === \"0x0000000000000000000000000000000000000000\") {\n                throw new Error(\"Invalid address for voter name: \" + name);\n            }\n\n            const balance = await contract.balanceOf(nameAddress);\n            const formattedBalance = ethers.formatEther(balance); \n            balances.push({ name, balance: formattedBalance });\n        } catch (error) {\n            console.error(`Error fetching balance for ${name}:`, error);\n            balances.push({ name, balance: \"0\" }); // Set \"0\" to ensure sorting works\n        }\n    }\n    balances.sort((a, b) => parseFloat(b.balance) - parseFloat(a.balance));\n    setVoterBalances(balances);\n};\n\n  const handleVote = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.vote(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Vote successful!');\n\n      fetchVoterBalances(contract, voterNames);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  };\n\n  const toggleVoting = async (enable) => {\n    if (!contract) return;\n    try {\n      const tx = enable ? await contract.votingOn() : await contract.votingOff();\n      await tx.wait();\n      setVotingEnabled(enable);\n      alert(`Voting ${enable ? 'enabled' : 'disabled'}`);\n    } catch (error) {\n      console.error('Error toggling voting:', error);\n      alert('Failed to toggle voting');\n    }\n  };\n\n  const issueToken = async () => {\n    if (!contract || !voterName || !amount) return;\n    try {\n      const tx = await contract.issueToken(voterName, ethers.parseEther(amount));\n      await tx.wait();\n      alert('Issue tokens successful!');\n\n      fetchVoterBalances(contract, voterNames);\n    } catch (error) {\n      console.error('Error voting:', error);\n      alert(`Failed to vote: ${error.message}`);\n    }\n  }\n\n  return (\n    <Container>\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Turing Voting DApp\n        </Typography>\n        <Typography variant=\"body1\">Connected Account: {account}</Typography>\n        <Typography variant=\"body1\">Voting Status: {votingEnabled ? 'Enabled' : 'Disabled'}</Typography>\n\n        <Box my={2}>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel>Voter Name</InputLabel>\n            <Select\n              value={voterName}\n              onChange={(e) => setVoterName(e.target.value)}\n              label=\"Voter Name\"\n            >\n              {voterNames.map((name, index) => (\n                <MenuItem key={index} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <TextField\n            label=\"Amount (in Turing)\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            margin=\"normal\"\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleVote}>\n            Vote\n          </Button>\n        </Box>\n\n        <Button variant=\"contained\" onClick={issueToken} sx={{ backgroundColor: '#4caf50', '&:hover': { backgroundColor: '#45a049' } }}>\n          Issue Tokens\n        </Button>\n\n        <Box my={2}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => toggleVoting(!votingEnabled)}>\n            {votingEnabled ? 'Disable Voting' : 'Enable Voting'}\n          </Button>\n        </Box>\n\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          Voter Balances\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Voter Name</TableCell>\n                <TableCell align=\"right\">Balance (Turing)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {voterBalances.map((voter, index) => (\n                <TableRow key={index}>\n                  <TableCell>{voter.name}</TableCell>\n                  <TableCell align=\"right\">{voter.balance}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}